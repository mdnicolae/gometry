name: Release

on:
  push:
    branches:
      - main

jobs:
  test:
    name: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        id: tests_passed
        run: go test ./...

  release:
    name: release
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Determine Next Tag Version
        id: tag_version
        run: |
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"

          IFS='.' read -r major minor patch <<< "${latest_tag#v}"

          patch=$((patch + 1))

          new_tag="v$major.$minor.$patch"
          echo "New tag: $new_tag"
          echo "tag=$new_tag" >> $GITHUB_ENV

      - name: Create and Push New Tag
        if: ${{ steps.tag_version.outputs.tag != github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if the tag already exists
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "Tag $tag already exists. Skipping tag creation."
          else
            git tag -a "$tag" -m "Release $tag"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} "$tag"
          fi

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          release_name: "Release ${{ env.tag }}"
          body: "Automated release based on successful tests."
          draft: false
          prerelease: false